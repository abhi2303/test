import org.apache.spark.api.java.JavaPairRDD;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.sql.SparkSession;
import scala.Tuple2;

public class SparkMapReduceJob {
    public static void main(String[] args) {
        // Create a SparkSession
        SparkSession spark = SparkSession.builder()
                .appName("Spark MapReduce Job")
                .master("local[*]")
                .getOrCreate();

        // Read input data as an RDD
        JavaRDD<String> inputRDD = spark.read().textFile("hdfs://<HDFS_LOCATION>/input/*.txt").javaRDD();

        // Transform inputRDD using map and reduceByKey operations
        JavaPairRDD<String, Integer> resultRDD = inputRDD
                .flatMap(line -> Arrays.asList(line.split(" ")).iterator())
                .mapToPair(word -> new Tuple2<>(word, 1))
                .reduceByKey(Integer::sum);

        // Output the result to the console
        resultRDD.foreach(tuple -> System.out.println(tuple._1() + ": " + tuple._2()));

        // Stop the SparkSession
        spark.stop();
    }
}
